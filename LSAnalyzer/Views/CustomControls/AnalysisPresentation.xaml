<UserControl x:Class="LSAnalyzer.Views.CustomControls.AnalysisPresentation"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:LSAnalyzer.Views.CustomControls"
             xmlns:ViewModels="clr-namespace:LSAnalyzer.ViewModels"
             xmlns:fa="http://schemas.awesome.incremented/wpf/xaml/fontawesome.sharp"
             xmlns:sys="clr-namespace:System;assembly=mscorlib"
             xmlns:converter="clr-namespace:LSAnalyzer.ViewModels.ValueConverter"
             mc:Ignorable="d"
             d:DataContext="{d:DesignInstance Type=ViewModels:AnalysisPresentation, IsDesignTimeCreatable=True}">
    <UserControl.Resources>
        <converter:BoolToAnalysisMode x:Key="BoolToAnalysisConverter"/>
        <converter:BoolToVisibility x:Key="BoolToVisibilityConverter"/>
        <converter:EmptyEnumerableToVisibilityCollapsed x:Key="EmptyEnumerableToVisibilityCollapsedConverter"/>
        <converter:InverseBool x:Key="InverseBoolConverter"/>
        <converter:NullToBool x:Key="NullToBoolConverter"/>
        <converter:NullToVisibilityCollapsed x:Key="NullToVisibilityCollapsedConverter"/>
        <converter:VariablesToString x:Key="VariablesToStringConverter"/>
    </UserControl.Resources>
    <Border BorderBrush="Gray" BorderThickness="0,0,0,0.5">
        <Expander IsExpanded="True" Margin="5">
            <Expander.Header>
                <Grid HorizontalAlignment="{Binding HorizontalAlignment, RelativeSource={RelativeSource AncestorType=ContentPresenter}, Mode=OneWayToSource}">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="*"/>
                        <ColumnDefinition Width="auto"/>
                    </Grid.ColumnDefinitions>
                    <TextBlock Grid.Column="0" VerticalAlignment="Center" Text="{Binding Analysis.ShortInfo}" FontWeight="Bold"/>
                    <Button x:Name="buttonRemoveAnalysis" Grid.Column="1" HorizontalAlignment="Right" Height="22" ContentTemplate="{StaticResource Trash}" Command="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Window}}, Path=DataContext.RemoveAnalysisCommand}" CommandParameter="{Binding Mode=OneTime}"/>
                </Grid>
            </Expander.Header>
            <StackPanel Orientation="Vertical" Margin="10,10,10,10">
                <Grid Margin="0,0,0,10">
                    <Grid.RowDefinitions>
                        <RowDefinition/>
                        <RowDefinition/>
                        <RowDefinition/>
                        <RowDefinition/>
                        <RowDefinition/>
                    </Grid.RowDefinitions>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="85"/>
                        <ColumnDefinition/>
                        <ColumnDefinition Width="auto"/>
                    </Grid.ColumnDefinitions>
                    <TextBlock Grid.Row="0" Grid.Column="0" Text="File:"/>
                    <TextBlock Grid.Row="0" Grid.Column="1" Text="{Binding Analysis.AnalysisConfiguration.FileName}"/>
                    <TextBlock Grid.Row="2" Grid.Column="0" Text="Subset:" Visibility="{Binding Analysis.SubsettingExpression, Converter={StaticResource NullToVisibilityCollapsedConverter}}"/>
                    <TextBlock Grid.Row="2" Grid.Column="1" Text="{Binding Analysis.SubsettingExpression}" Visibility="{Binding Analysis.SubsettingExpression, Converter={StaticResource NullToVisibilityCollapsedConverter}}"/>
                    <TextBlock Grid.Row="1" Grid.Column="0" Text="Dataset Type:"/>
                    <StackPanel Grid.Row="1" Grid.Column="1" Orientation="Horizontal">
                        <TextBlock Text="{Binding Analysis.AnalysisConfiguration.DatasetType.Name}"/>
                        <TextBlock Text="{Binding Analysis.AnalysisConfiguration.DatasetType.Weight, StringFormat=({0})}" Margin="5,0,0,0"/>
                    </StackPanel>
                    <TextBlock Grid.Row="3" Grid.Column="0" Text="Variables:"/>
                    <TextBlock Grid.Row="3" Grid.Column="1" Text="{Binding Analysis.Vars, Converter={StaticResource VariablesToStringConverter}}"/>
                    <TextBlock Grid.Row="4" Grid.Column="0" Text="Group by:" Visibility="{Binding Analysis.GroupBy, Converter={StaticResource EmptyEnumerableToVisibilityCollapsedConverter}}"/>
                    <TextBlock Grid.Row="4" Grid.Column="1" Text="{Binding Analysis.GroupBy, Converter={StaticResource VariablesToStringConverter}}" Visibility="{Binding Analysis.GroupBy, Converter={StaticResource EmptyEnumerableToVisibilityCollapsedConverter}}"/>
                    <Button x:Name="buttonDownloadXlsx" Grid.Column="2" Grid.Row="0" Grid.RowSpan="5" VerticalAlignment="Bottom" Height="22" ContentTemplate="{StaticResource ExcelWorksheet}" Click="ButtonDownloadXlsx_Click" IsEnabled="{Binding IsBusy, Converter={StaticResource InverseBoolConverter}}"/>
                </Grid>
                <Grid>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="*"/>
                        <ColumnDefinition Width="auto"/>
                    </Grid.ColumnDefinitions>
                    <Grid Grid.Column="0">
                        <Grid.RowDefinitions>
                            <RowDefinition/>
                            <RowDefinition/>
                        </Grid.RowDefinitions>
                        <StackPanel Orientation="Vertical">
                            <StackPanel Orientation="Horizontal">
                                <StackPanel.Visibility>
                                    <Binding Path="HasColumnTooltips" Converter="{StaticResource BoolToVisibilityConverter}">
                                        <Binding.ConverterParameter>
                                            <sys:Boolean>true</sys:Boolean>
                                        </Binding.ConverterParameter>
                                    </Binding>
                                </StackPanel.Visibility>
                                <ContentControl ContentTemplate="{StaticResource InfoTipInline}" ToolTip="Move mouse cursor above column headers to see value labels"/>
                                <TextBlock Text="Point mouse at column headers to read value labels"/>
                            </StackPanel>
                            <DataGrid Grid.Row="0" x:Name="dataGridResults" IsReadOnly="True" ItemsSource="{Binding DataView}" AutoGeneratingColumn="DataGrid_AutoGeneratingColumn" MinHeight="22" MaxHeight="450" VerticalAlignment="Top" MinColumnWidth="100" ColumnWidth="SizeToCells" PreviewMouseWheel="DataGrid_MouseWheel"/>
                        </StackPanel>
                        <fa:IconImage Grid.Row="0" Icon="Sun" fa:Awesome.Spin="True" VerticalAlignment="Top" Height="20" Foreground="Gray" Visibility="{Binding IsBusy, Converter={StaticResource BoolToVisibilityConverter}}"/>
                        <StackPanel Grid.Row="1" Margin="0,10,0,0"  Orientation="Vertical" VerticalAlignment="Top" Visibility="{Binding TableSecondary, Converter={StaticResource NullToVisibilityCollapsedConverter}}">
                            <TextBlock Text="{Binding TableSecondary.TableName}"/>
                            <DataGrid x:Name="dataGridCov" IsReadOnly="True" ItemsSource="{Binding SecondaryDataView}" AutoGeneratingColumn="DataGrid_AutoGeneratingColumn" MinHeight="22" MaxHeight="450" MinColumnWidth="100" ColumnWidth="SizeToCells" PreviewMouseWheel="DataGrid_MouseWheel">

                            </DataGrid>
                        </StackPanel>
                    </Grid>
                    <StackPanel Grid.Column="1" Margin="10,0,0,0">
                        <StackPanel>
                            <StackPanel.Visibility>
                                <Binding Path="HasTableAverage" Converter="{StaticResource BoolToVisibilityConverter}">
                                    <Binding.ConverterParameter>
                                        <sys:Boolean>true</sys:Boolean>
                                    </Binding.ConverterParameter>
                                </Binding>
                            </StackPanel.Visibility>
                            <CheckBox IsChecked="{Binding UseTableAverage}" IsEnabled="{Binding IsBusy, Converter={StaticResource InverseBoolConverter}}">
                                <CheckBox.Content>
                                    <StackPanel Orientation="Horizontal">
                                        <TextBlock Text="Calculate table average"/>
                                        <ContentControl ContentTemplate="{StaticResource InfoTipInline}" ToolTip="Table average used by OECD/IEA for reporting of international average (mean of means)"/>
                                    </StackPanel>
                                </CheckBox.Content>
                            </CheckBox>
                            <Separator/>
                        </StackPanel>
                        <CheckBox Content="Show variable labels" IsChecked="{Binding ShowVariableLabels}" IsEnabled="{Binding IsBusy, Converter={StaticResource InverseBoolConverter}}">
                            <CheckBox.Visibility>
                                <Binding Path="HasVariableLabels" Converter="{StaticResource BoolToVisibilityConverter}">
                                    <Binding.ConverterParameter>
                                        <sys:Boolean>true</sys:Boolean>
                                    </Binding.ConverterParameter>
                                </Binding>
                            </CheckBox.Visibility>
                        </CheckBox>
                        <CheckBox Content="Show rank" IsChecked="{Binding ShowRank}" IsEnabled="{Binding IsBusy, Converter={StaticResource InverseBoolConverter}}">
                            <CheckBox.Visibility>
                                <Binding Path="HasRank" Converter="{StaticResource BoolToVisibilityConverter}">
                                    <Binding.ConverterParameter>
                                        <sys:Boolean>true</sys:Boolean>
                                    </Binding.ConverterParameter>
                                </Binding>
                            </CheckBox.Visibility>
                        </CheckBox>
                        <CheckBox Content="Show N cases (unweighted)" IsChecked="{Binding ShowNcases}" IsEnabled="{Binding IsBusy, Converter={StaticResource InverseBoolConverter}}">
                            <CheckBox.Visibility>
                                <Binding Path="HasNcasesToggle" Converter="{StaticResource BoolToVisibilityConverter}">
                                    <Binding.ConverterParameter>
                                        <sys:Boolean>true</sys:Boolean>
                                    </Binding.ConverterParameter>
                                </Binding>
                            </CheckBox.Visibility>
                        </CheckBox>
                        <CheckBox Content="Show N weighted" IsChecked="{Binding ShowNweight}" IsEnabled="{Binding IsBusy, Converter={StaticResource InverseBoolConverter}}">
                            <CheckBox.Visibility>
                                <Binding Path="HasNweightToggle" Converter="{StaticResource BoolToVisibilityConverter}">
                                    <Binding.ConverterParameter>
                                        <sys:Boolean>true</sys:Boolean>
                                    </Binding.ConverterParameter>
                                </Binding>
                            </CheckBox.Visibility>
                        </CheckBox>
                        <CheckBox Content="Show p values" IsChecked="{Binding ShowPValues}" IsEnabled="{Binding IsBusy, Converter={StaticResource InverseBoolConverter}}">
                            <CheckBox.Visibility>
                                <Binding Path="HasPValues" Converter="{StaticResource BoolToVisibilityConverter}">
                                    <Binding.ConverterParameter>
                                        <sys:Boolean>true</sys:Boolean>
                                    </Binding.ConverterParameter>
                                </Binding>
                            </CheckBox.Visibility>
                        </CheckBox>
                        <CheckBox IsChecked="{Binding ShowFMI}" IsEnabled="{Binding IsBusy, Converter={StaticResource InverseBoolConverter}}">
                            <CheckBox.Content>
                                <StackPanel Orientation="Horizontal">
                                    <TextBlock Text="Show FMI"/>
                                    <ContentControl ContentTemplate="{StaticResource InfoTipInline}" ToolTip="FMI = fraction of missing information: Amount of variance in coefficient that comes from multiple imputation (or PVs) compared to replication."/>
                                </StackPanel>
                            </CheckBox.Content>
                            <CheckBox.Visibility>
                                <Binding Path="HasFMI" Converter="{StaticResource BoolToVisibilityConverter}">
                                    <Binding.ConverterParameter>
                                        <sys:Boolean>true</sys:Boolean>
                                    </Binding.ConverterParameter>
                                </Binding>
                            </CheckBox.Visibility>
                        </CheckBox>
                    </StackPanel>
                </Grid>
            </StackPanel>
        </Expander>
    </Border>
</UserControl>
